<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Forino</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-09T03:49:37.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Wang He</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人收藏夹整理</title>
    <link href="http://yoursite.com/2016/12/07/%E4%B8%AA%E4%BA%BA%E6%94%B6%E8%97%8F%E5%A4%B9%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2016/12/07/个人收藏夹整理/</id>
    <published>2016-12-07T09:50:32.000Z</published>
    <updated>2016-12-09T03:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>把平时工作和学习中查阅资料和学习知识的站点整理一下，有的值得看第二遍，还有的今后遇到类似的问题时可以快速查阅和参考。<br><a id="more"></a></p>
<hr>
<h3 id="HTML-方面"><a href="#HTML-方面" class="headerlink" title="HTML 方面"></a>HTML 方面</h3><h4 id="标签相关"><a href="#标签相关" class="headerlink" title="标签相关"></a>标签相关</h4><ul>
<li><code>&lt;head&gt;</code>标签<ul>
<li><a href="http://www.css88.com/archives/6410" target="_blank" rel="external">移动前端不得不了解的HTML5 head 头标签（2016最新版）</a></li>
<li><a href="http://gethead.info/" target="_blank" rel="external">A list of everything that could go in the <code>&lt;head&gt;</code> of your document</a></li>
</ul>
</li>
<li><code>&lt;label&gt;</code>标签<ul>
<li><a href="http://www.topcss.org/%e8%a1%a8%e5%8d%95%e6%98%be%e5%bc%8flabel%e5%92%8c%e9%9a%90%e5%bc%8flabel%e5%af%b9%e5%b1%8f%e5%b9%95%e9%98%85%e8%af%bb%e5%99%a8%e7%94%a8%e6%88%b7%e7%9a%84%e5%bd%b1%e5%93%8d/" target="_blank" rel="external">表单显式label和隐式label对屏幕阅读器用户的影响</a></li>
</ul>
</li>
</ul>
<h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><ul>
<li><a href="http://www.fileformat.info/format/w3c/entitytest.htm" target="_blank" rel="external">http://www.fileformat.info/format/w3c/entitytest.htm</a></li>
<li><a href="http://114.xixik.com/character/" target="_blank" rel="external">http://114.xixik.com/character/</a></li>
</ul>
<h4 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h4><ul>
<li><a href="http://www.cnblogs.com/yuzhongwusan/archive/2011/12/19/2293347.html" target="_blank" rel="external">HTMl5的sessionStorage和localStorage</a></li>
<li><a href="https://github.com/nbubna/store" target="_blank" rel="external">A better way to use localStorage and sessionStorage</a></li>
</ul>
<h4 id="模板语言"><a href="#模板语言" class="headerlink" title="模板语言"></a>模板语言</h4><ul>
<li><a href="https://github.com/slim-template/slim" target="_blank" rel="external">slim</a></li>
<li><a href="https://naltatis.github.io/jade-syntax-docs/" target="_blank" rel="external">jade</a></li>
</ul>
<h4 id="语意化"><a href="#语意化" class="headerlink" title="语意化"></a>语意化</h4><ul>
<li><a href="http://www.cnblogs.com/rising-fay/archive/2013/02/25/2932592.html" target="_blank" rel="external">html页面的CSS、DIV命名规则</a></li>
</ul>
<h4 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h4><ul>
<li><a href="https://gold.xitu.io/post/5843a0e861ff4b006b97f5d5" target="_blank" rel="external">emmet, 让你的 html 飞起来</a></li>
</ul>
<h3 id="问答"><a href="#问答" class="headerlink" title="问答"></a>问答</h3><ul>
<li><a href="https://www.zhihu.com/question/24398907" target="_blank" rel="external">HTML5 有哪些让你惊艳的 demo？</a></li>
<li><a href="https://www.zhihu.com/question/28478379" target="_blank" rel="external">前端工程师一般都喜欢去哪些网站逛？</a></li>
</ul>
<h3 id="兼容性方面"><a href="#兼容性方面" class="headerlink" title="兼容性方面"></a>兼容性方面</h3><ul>
<li><a href="http://caniuse.com/#index" target="_blank" rel="external">can I use</a></li>
<li><a href="http://jartto.wang/2016/12/06/talk-about-ie-compatible-over-again/" target="_blank" rel="external">再谈ie浏览器兼容问题</a></li>
<li><a href="http://stackoverflow.com/questions/9906794/internet-explorers-css-rules-limits" target="_blank" rel="external">Internet Explorer’s CSS rules limits</a><ul>
<li>rails的解决方案——<a href="https://github.com/zweilove/css_splitter" target="_blank" rel="external">https://github.com/zweilove/css_splitter</a></li>
</ul>
</li>
</ul>
<h3 id="CSS方面"><a href="#CSS方面" class="headerlink" title="CSS方面"></a>CSS方面</h3><h4 id="开发工具-1"><a href="#开发工具-1" class="headerlink" title="开发工具"></a>开发工具</h4><ul>
<li><a href="https://github.com/brigade/scss-lint" target="_blank" rel="external">scss-lint(Configurable tool for writing clean and consistent SCSS)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/20495964" target="_blank" rel="external">CSS Modules 详解及 React 中实践</a></li>
<li><a href="https://ruby-china.org/topics/4396SASS 和 Compass 指南" target="_blank" rel="external">SASS 和 Compass 指南</a></li>
</ul>
<h4 id="思想、观点和鸡汤"><a href="#思想、观点和鸡汤" class="headerlink" title="思想、观点和鸡汤"></a>思想、观点和鸡汤</h4><ul>
<li><a href="http://www.zhangxinxu.com/wordpress/2012/07/bottleneck-css-study/" target="_blank" rel="external">说说CSS学习中的瓶颈(张鑫旭)</a></li>
<li><a href="https://segmentfault.com/a/1190000005775934" target="_blank" rel="external">提升你的CSS姿势</a></li>
</ul>
<h4 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h4><ul>
<li><a href="http://www.w3cplus.com/css/mindbemding-getting-your-head-round-bem-syntax.html" target="_blank" rel="external">BEM思想之彻底弄清BEM语法（大漠） </a></li>
</ul>
<h4 id="技术点"><a href="#技术点" class="headerlink" title="技术点"></a>技术点</h4><ul>
<li>参考资料<ul>
<li><a href="http://cssreference.io/?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more" target="_blank" rel="external">图解CSS属性</a></li>
<li>[]</li>
</ul>
</li>
<li>flex 布局<ul>
<li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="external">Flex 布局教程：语法篇（阮一峰）</a></li>
<li>兼容移动端的flex以及简洁的api声明式布局——<a href="https://github.com/lzxb/flex.css" target="_blank" rel="external">flex.css</a></li>
</ul>
</li>
<li>animate动画<ul>
<li><a href="http://imweb.io/topic/5643850eed18cc424277050e" target="_blank" rel="external">搞定这些疑难杂症，向css3动画说yes</a></li>
</ul>
</li>
</ul>
<h4 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h4><ul>
<li><a href="http://www.zhangxinxu.com/wordpress/2012/04/inline-block-space-remove-%e5%8e%bb%e9%99%a4%e9%97%b4%e8%b7%9d/" target="_blank" rel="external">去除inline-block元素间间距的N种方法(张鑫旭)</a></li>
<li><a href="http://blog.csdn.net/freshlover/article/details/11579669" target="_blank" rel="external">盘点8种CSS实现垂直居中水平居中的绝对定位居中技术</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/2013/06/%e4%bc%aa%e5%85%83%e7%b4%a0-%e8%a1%a8%e5%8d%95%e6%a0%b7%e5%bc%8f-pseudo-elements-style-form-controls/" target="_blank" rel="external">伪元素表单控件默认样式重置与自定义大全(张鑫旭)</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/2011/03/displayinline-blocktext-alignjustify%e4%b8%8b%e5%88%97%e8%a1%a8%e7%9a%84%e4%b8%a4%e7%ab%af%e5%af%b9%e9%bd%90%e5%b8%83%e5%b1%80/" target="_blank" rel="external">display:inline-block/text-align:justify下列表的两端对齐布局(张鑫旭)</a></li>
<li><a href="http://imweb.io/topic/555a92f76da9e441601d6e94" target="_blank" rel="external">css中如何做到容器按比例缩放【padding的妙用】</a></li>
</ul>
<h4 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h4><ul>
<li>loading效果<ul>
<li>css动画做的loading图标~~~<a href="https://github.com/tobiasahlin/SpinKit" target="_blank" rel="external">Github</a>&nbsp;&nbsp;&nbsp;<a href="http://tobiasahlin.com/spinkit/" target="_blank" rel="external">Dome</a></li>
<li><a href="http://www.raphaelfabeni.com.br/css-loader/" target="_blank" rel="external">各种loading</a></li>
</ul>
</li>
<li>css渐变实现的纯色背景~~~ <a href="https://github.com/evankarageorgos/hue" target="_blank" rel="external">Github</a>&nbsp;&nbsp;&nbsp;<a href="http://evankarageorgos.github.io/hue/grid.html" target="_blank" rel="external">Dome</a></li>
<li>css框架<ul>
<li>轻量级<ul>
<li><a href="http://hackcss.com/" target="_blank" rel="external">hack.css</a></li>
<li><a href="http://corecss.io/" target="_blank" rel="external">core.css</a></li>
<li><a href="http://usewing.ml/" target="_blank" rel="external">WING</a></li>
<li><a href="https://picturepan2.github.io/spectre/" target="_blank" rel="external">Spectre.css</a></li>
</ul>
</li>
<li>普通<ul>
<li><a href="http://www.bootcss.com/" target="_blank" rel="external">Bootstrap</a></li>
<li><a href="http://dropbox.github.io/scooter/" target="_blank" rel="external">Scooter</a><br>*</li>
</ul>
</li>
<li>重量级<ul>
<li><a href="http://www.primefaces.org/#" target="_blank" rel="external">PrimeFaces</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="动画库"><a href="#动画库" class="headerlink" title="动画库"></a>动画库</h3><h4 id="css动画"><a href="#css动画" class="headerlink" title="css动画"></a>css动画</h4><ul>
<li><a href="https://github.com/daneden/animate.css/" target="_blank" rel="external">animate.css</a>【<a href="https://daneden.github.io/animate.css/" target="_blank" rel="external">Dome</a>】</li>
<li><a href="https://github.com/h5bp/Effeckt.css" target="_blank" rel="external">effeckt</a>【<a href="http://h5bp.github.io/Effeckt.css/" target="_blank" rel="external">Dome</a>】</li>
<li><a href="https://github.com/IanLunn/Hover" target="_blank" rel="external">hover.css</a>【<a href="http://ianlunn.github.io/Hover/" target="_blank" rel="external">Dome</a>】</li>
<li><a href="https://github.com/leaverou/animatable" target="_blank" rel="external">animatable</a>【<a href="http://leaverou.github.io/animatable/" target="_blank" rel="external">Dome</a>】</li>
</ul>
<h4 id="js动画"><a href="#js动画" class="headerlink" title="js动画"></a>js动画</h4><ul>
<li><a href="http://thednp.github.io/kute.js/index.html" target="_blank" rel="external">KUTE.js</a></li>
</ul>
<h3 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h3><ul>
<li>B站开源——<a href="https://github.com/Bilibili/flv.js" target="_blank" rel="external">Flv.js</a></li>
</ul>
<h3 id="JS方面"><a href="#JS方面" class="headerlink" title="JS方面"></a>JS方面</h3><h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><ul>
<li><a href="http://javascript.ruanyifeng.com/" target="_blank" rel="external">JavaScript 标准参考教程</a></li>
<li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">ECMAScript 6入门</a></li>
</ul>
<h4 id="开源库-1"><a href="#开源库-1" class="headerlink" title="开源库"></a>开源库</h4><ul>
<li>轻量的动画背景——<a href="https://github.com/VincentGarreau/particles.js/" target="_blank" rel="external">particles.js</a>&nbsp;&nbsp;&nbsp;<a href="http://vincentgarreau.com/particles.js/" target="_blank" rel="external">Dome</a></li>
</ul>
<h3 id="React-全家桶"><a href="#React-全家桶" class="headerlink" title="React 全家桶"></a>React 全家桶</h3><ul>
<li>环境通用框架——<a href="https://zeit.co/blog/next" target="_blank" rel="external">Next.js</a></li>
</ul>
<h3 id="好工作"><a href="#好工作" class="headerlink" title="好工作"></a>好工作</h3><ul>
<li><a href="https://gold.xitu.io/post/5842c27c61ff4b006c2a55d7?utm_source=gold_browser_extension" target="_blank" rel="external">从培训班出来之后找工作的经历，教会了我这五件事</a></li>
</ul>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>整理真是个体力活。。之前太不重视总结了，导致有时候遇到相同或者类似问题，又得浪费时间google。。所以每天的积累和总结还是很有必要的</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把平时工作和学习中查阅资料和学习知识的站点整理一下，有的值得看第二遍，还有的今后遇到类似的问题时可以快速查阅和参考。&lt;br&gt;
    
    </summary>
    
    
      <category term="收集" scheme="http://yoursite.com/tags/%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>SVG笔记</title>
    <link href="http://yoursite.com/2016/12/05/SVG%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/12/05/SVG笔记/</id>
    <published>2016-12-05T09:45:25.000Z</published>
    <updated>2016-12-06T07:28:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>SVG 已经不是什么新鲜技术了，天猫也即将不支持IE8.所以SVG在今后的使用场景肯定会更加广泛。之前用SVG实现一个环形统计图，比用canvas渲染的图表性能更好。下面对一些SVG的知识点进行整理，以便今后使用查阅方便。<br><a id="more"></a></p>
<hr>
<h4 id="零、SVG简介"><a href="#零、SVG简介" class="headerlink" title="零、SVG简介"></a>零、SVG简介</h4><ol>
<li><p>SVG 即 Scalable Vector Graphics (可伸缩矢量图形)</p>
</li>
<li><p>优点</p>
<ul>
<li><p>可以随意放大或改变尺寸, 同时其图形质量不会有损失</p>
</li>
<li><p>比JPEG和GIF尺寸更小</p>
</li>
<li><p>图像中文本可选可搜索</p>
</li>
<li><p>能在任何分辨率下被高质量打印</p>
</li>
<li><p>开放, 兼容, 易读取</p>
</li>
</ul>
</li>
<li><p>SVG 可以单独作为一个文件书写, 在这里只介绍编写在HTML里的SVG</p>
</li>
</ol>
<h4 id="一、SVG-标签"><a href="#一、SVG-标签" class="headerlink" title="一、SVG 标签"></a>一、SVG 标签</h4><pre><code>&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot;&gt;
    {some svg code}
&lt;/svg&gt;
</code></pre><p>上面是一个svg基础标签, 任何svg的代码都需要包裹在这个标签中。</p>
<p>在现代浏览器中, svg标签的<em>xmlns</em>属性和<em>version</em>属性都可以省略。</p>
<p>svg 标签默认的宽高是 <em>300 * 150</em> , 如果不设置<em>width</em>和<em>height</em>属性, SVG图像就在这个尺寸的画布中绘制。</p>
<h4 id="二、SVG-元素"><a href="#二、SVG-元素" class="headerlink" title="二、SVG 元素"></a>二、SVG 元素</h4><ul>
<li><p>矩形 <code>&lt;rect&gt;</code></p>
</li>
<li><p>圆形 <code>&lt;circle&gt;</code></p>
</li>
<li><p>椭圆 <code>&lt;ellipse&gt;</code></p>
</li>
<li><p>线 <code>&lt;line&gt;</code></p>
</li>
<li><p>折线 <code>&lt;polyline&gt;</code></p>
</li>
<li><p>多边形 <code>&lt;polygon&gt;</code></p>
</li>
<li><p>路径 <code>&lt;path&gt;</code></p>
</li>
<li><p>文本 <code>&lt;text&gt;</code></p>
</li>
</ul>
<h4 id="三、SVG-元素属性"><a href="#三、SVG-元素属性" class="headerlink" title="三、SVG 元素属性"></a>三、SVG 元素属性</h4><p>下面用表格的形式对一些常见的元素属性进行这里：</p>
<p><table style="width: 100%;text-align: center;tabel-layout:fixed;border:1px solid gray;"><thead><tr><td style="width:16%">属性描述</td><td style="width:20%">属性名</td><td style="width:32%">属性值</td><td style="width:32%">备注</td></tr></thead><tbody><tr><td rowspan="3">位置</td><td><p><code>x</code> <code>y</code></p><p>(矩形位置)</p></td><td>相对于<em>svg</em>标签的绘制区域的左侧和顶端距离。类似于css中的top和left属性。</td><td>位置的属性是将元素的内容区域进行定位（边框是不属于内容区域的，这一点需要注意）</td></tr><tr><td><p><code>cx</code> <code>cy</code></p><p>(圆形位置)</p></td><td>圆形坐标。默认值为（0，0）</td><td></td></tr><tr><td><p><code>x1</code> <code>x2</code> <code>y1</code> <code>y2</code></p><p>(直线开始和结束的位置)</p></td><td></td><td></td></tr><tr><td rowspan="3">尺寸</td><td><p><code>width</code> <code>height</code></p><p>(矩形尺寸)</p></td><td rowspan="3"><p>同css中width和height的值</p><p>可以直接为数字（相当于px)</p><p>使用em和rem效果似乎是一样的</p><p>百分比为单位时，是相对于<em>svg</em>标签的尺寸</p></td><td></td></tr><tr><td><p><code>r</code></p><p>(圆形半径)</p></td><td></td></tr><tr><td><p><code>rx</code> <code>ry</code></p><p>(椭圆的水平、垂直半径)</p></td><td></td></tr><tr><td>圆角</td><td><code>rx</code> <code>ry</code></td><td>同css中</td><td></td></tr><tr><td>多边形、曲线</td><td><code>points</code></td><td>字符串，包含至少三个坐标值，用空格分割。如<code>points=&quot;200,10 250,190 160,210&quot;</code></td><td></td></tr><tr><td>变换</td><td><code>transform</code></td><td><p>translate（位移）</p><p>rotate（旋转）</p><p>scale（缩放）</p><p>skew（斜切）</p></td><td><a href="http://www.zhangxinxu.com/wordpress/2015/10/understand-svg-transform/" target="_blank" rel="external">一切尽在这里</a></td></tr><tr><td colspan="4"><p>以下属性需要写在<em>style</em>属性中, 如</p><p><code>&lt;rect x=1 y=1 height＝&quot;100px&quot; width=10 style=&quot;下面的属性&quot; /&gt;</code></p></td></tr><tr><td rowspan="3">填充</td><td><p><code>fill-rule</code></p><p>(填充规则)</p></td><td><p>nonzero(默认值)</p><p>evenodd</p><p>inherit</p></td><td></td></tr><tr><td><p><code>fill-opacity</code></p><p>(填充透明度)</p></td><td></td><td></td></tr><tr><td><p><code>fill</code></p><p>(填充颜色)</p></td><td rowspan="2">颜色同css中，颜色名，十六进制，rgb(a)等等</td><td></td></tr><tr><td rowspan="4">描边(边框、直线)属性</td><td><p><code>stroke</code></p><p>(颜色)</p></td><td rowspan="2">关于<em>stroke</em>及其他的属性，张鑫旭大神有<a href="http://www.zhangxinxu.com/wordpress/2014/04/animateion-line-drawing-svg-path-%e5%8a%a8%e7%94%bb-%e8%b7%af%e5%be%84/" target="_blank" rel="external">一篇博文</a>介绍</td></tr><tr><td><p><code>stroke-opacity</code></p><p>(透明度)</p></td><td></td></tr><tr><td><p><code>stroke-width</code></p><p>(宽度)</p></td><td></td><td>矩形边框的宽度不属于元素的宽高</td></tr><tr><td><p><code>stroke-dasharray</code></p><p>(用于创建虚线)</p></td><td>指定一个虚线规则的数组，偶数项为实体宽度，奇数项为空白宽度。之后一直循环这个数组，形成一个虚线</td><td>需要渲染大量环形图表，用echart会很卡，用SVG的这个属性就很轻松的实现了，也是张大神的文章——<a href="http://www.zhangxinxu.com/wordpress/2015/07/svg-circle-loading/" target="_blank" rel="external">小tip: 使用SVG寥寥数行实现圆环loading进度效果</a></td></tr><tr><td rowspan="3">透明度</td><td><p><code>opacity</code></p><p>(元素透明度)</p></td><td rowspan="3">同css中，范围为0-1</td><td rowspan="3">显而易见，设置了<em>opacity</em>属性，也就同时设置了<em>fill-opacity</em>和<em>stroke-opacity</em>属性</td></tr><tr><td><p><code>fill-opacity</code></p><p>(填充透明度)</p></td></tr><tr><td><p><code>fill</code></p><p>(填充颜色)</p></td></tr></tbody></table></p>
<!-- 开发代码<table style='width: 100%;text-align: center;tabel-layout:fixed;border:1px solid gray;'>
  <thead>
    <tr>
      <td style='width:16%'>属性描述</td>
      <td style='width:20%'>属性名</td>
      <td style='width:32%'>属性值</td>
      <td style='width:32%'>备注</td>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td rowspan='3'>位置</td>
      <td><p>`x` `y`</p><p>(矩形位置)</p></td>
      <td>相对于*svg*标签的绘制区域的左侧和顶端距离。类似于css中的top和left属性。</td>
      <td>位置的属性是将元素的内容区域进行定位（边框是不属于内容区域的，这一点需要注意）</td>
    </tr>
    <tr>
      <td><p>`cx` `cy`</p><p>(圆形位置)</p></td>
      <td>圆形坐标。默认值为（0，0）</td>
      <td></td>
    </tr>
    <tr>
      <td><p>`x1` `x2` `y1` `y2`</p><p>(直线开始和结束的位置)</p></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td rowspan='3'>尺寸</td>
      <td><p>`width` `height`</p><p>(矩形尺寸)</p></td>
      <td rowspan='3'>
        <p>同css中width和height的值</p>
        <p>可以直接为数字（相当于px)</p>
        <p>使用em和rem效果似乎是一样的</p>
        <p>百分比为单位时，是相对于*svg*标签的尺寸</p>
      </td>
      <td></td>
    </tr>
    <tr>
      <td><p>`r`</p><p>(圆形半径)</p></td>
      <td></td>
    </tr>
    <tr>
      <td><p>`rx` `ry`</p><p>(椭圆的水平、垂直半径)</p></td>
      <td></td>
    </tr>
    <tr>
      <td>圆角</td>
      <td>`rx` `ry`</td>
      <td>同css中</td>
      <td></td>
    </tr>
    <tr>
      <td>多边形、曲线</td>
      <td>`points`</td>
      <td>字符串，包含至少三个坐标值，用空格分割。如```points="200,10 250,190 160,210"```</td>
      <td></td>
    </tr>
    <tr>
      <td>变换</td>
      <td>`transform`</td>
      <td>
        <p>translate（位移）</p>
        <p>rotate（旋转）</p>
        <p>scale（缩放）</p>
        <p>skew（斜切）</p>
      </td>
      <td>[一切尽在这里](http://www.zhangxinxu.com/wordpress/2015/10/understand-svg-transform/)
      </td>
    </tr>
    <tr>
      <td colspan='4'>
        <p>以下属性需要写在*style*属性中, 如</p>
        <p>```<rect x=1 y=1 height＝"100px" width=10 style="下面的属性" />```</p>
      </td>
    </tr>
    <tr>
      <td rowspan='3'>填充</td>
      <td><p>`fill-rule`</p><p>(填充规则)</p></td>
      <td>
        <p>nonzero(默认值)</p>
        <p>evenodd</p>
        <p>inherit</p>
      </td>
      <td></td>
    </tr>
    <tr>
      <td><p>`fill-opacity`</p><p>(填充透明度)</p></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td><p>`fill`</p><p>(填充颜色)</p></td>
      <td rowspan='2'>颜色同css中，颜色名，十六进制，rgb(a)等等</td>
      <td></td>
    </tr>
    <tr>
      <td rowspan='4'>描边(边框、直线)属性</td>
      <td><p>`stroke`</p><p>(颜色)</p></td>
      <td rowspan='2'>关于*stroke*及其他的属性，张鑫旭大神有[一篇博文](http://www.zhangxinxu.com/wordpress/2014/04/animateion-line-drawing-svg-path-%e5%8a%a8%e7%94%bb-%e8%b7%af%e5%be%84/)介绍</td>
    </tr>
    <tr>
      <td><p>`stroke-opacity`</p><p>(透明度)</p></td>
      <td></td>
    </tr>
    <tr>
      <td><p>`stroke-width`</p><p>(宽度)</p></td>
      <td></td>
      <td>矩形边框的宽度不属于元素的宽高</td>
    </tr>
    <tr>
      <td><p>`stroke-dasharray`</p><p>(用于创建虚线)</p></td>
      <td>指定一个虚线规则的数组，偶数项为实体宽度，奇数项为空白宽度。之后一直循环这个数组，形成一个虚线</td>
      <td>需要渲染大量环形图表，用echart会很卡，用SVG的这个属性就很轻松的实现了，也是张大神的文章——[小tip: 使用SVG寥寥数行实现圆环loading进度效果](http://www.zhangxinxu.com/wordpress/2015/07/svg-circle-loading/)</td>
    </tr>
    <tr>
      <td rowspan='3'>透明度</td>
      <td><p>`opacity`</p><p>(元素透明度)</p></td>
      <td rowspan='3'>同css中，范围为0-1
      <td rowspan='3'>显而易见，设置了*opacity*属性，也就同时设置了*fill-opacity*和*stroke-opacity*属性</td>
    </tr>
    <tr>
      <td><p>`fill-opacity`</p><p>(填充透明度)</p></td>
    </tr>
    <tr>
      <td><p>`fill`</p><p>(填充颜色)</p></td>
    </tr>
  </tbody>
</tabel> -->
<h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p><em>以上便是一些SVG的基本知识，以及部分关于SVG的好文章。后面有更深入的了解时再加进来。</em></p>
<p><strong> SVG很强大～</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SVG 已经不是什么新鲜技术了，天猫也即将不支持IE8.所以SVG在今后的使用场景肯定会更加广泛。之前用SVG实现一个环形统计图，比用canvas渲染的图表性能更好。下面对一些SVG的知识点进行整理，以便今后使用查阅方便。&lt;br&gt;
    
    </summary>
    
    
      <category term="svg" scheme="http://yoursite.com/tags/svg/"/>
    
  </entry>
  
</feed>
